////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Runtime.InteropServices;

using AndroidPlusPlus.Common;
using AndroidPlusPlus.VsDebugEngine;

using Microsoft.VisualStudio;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace AndroidPlusPlus.VsIntegratedPackage
{

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  public class DebuggerConnectionService : IDebuggerConnectionService
  {

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    private DebuggerConnectionWindow m_debuggerConnectionWindow;

    private StringBuilder m_textBuffer;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    public DebuggerConnectionService ()
    {
      m_debuggerConnectionWindow = null;

      m_textBuffer = new StringBuilder ();
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    int IDebuggerConnectionService.LaunchDialogShow ()
    {
      LoggingUtils.PrintFunction ();

      try
      {
        if (m_debuggerConnectionWindow == null)
        {
          m_debuggerConnectionWindow = new DebuggerConnectionWindow ();

          m_debuggerConnectionWindow.Closed += LaunchWindowClosed;
        }

        lock (m_debuggerConnectionWindow)
        {
          m_debuggerConnectionWindow.Dispatcher.Invoke ((Action) (() =>
          {
            m_debuggerConnectionWindow.textBox1.BeginChange ();

            m_debuggerConnectionWindow.textBox1.Text = m_textBuffer.ToString ();

            m_debuggerConnectionWindow.textBox1.EndChange ();

            m_debuggerConnectionWindow.textBox1.ScrollToEnd ();

            m_debuggerConnectionWindow.progressBar1.IsIndeterminate = true;

            m_debuggerConnectionWindow.Show ();

            m_debuggerConnectionWindow.Activate ();
          }));
        }

        return VSConstants.S_OK;
      }
      catch (Exception e)
      {
        LoggingUtils.HandleException (e);

        return VSConstants.E_FAIL;
      }
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    int IDebuggerConnectionService.LaunchDialogUpdate (string status, bool isError)
    {
      LoggingUtils.PrintFunction ();

      try
      {
        string line = string.Format ("[{0}] {1}", ((isError) ? "error" : "status"), status);

        LoggingUtils.Print (line);

        m_textBuffer.AppendLine (line);

        lock (m_debuggerConnectionWindow)
        {
          m_debuggerConnectionWindow.Dispatcher.Invoke ((Action) (() =>
          {
            m_debuggerConnectionWindow.textBox1.BeginChange ();

            m_debuggerConnectionWindow.textBox1.Text = m_textBuffer.ToString ();

            m_debuggerConnectionWindow.textBox1.EndChange ();

            m_debuggerConnectionWindow.textBox1.ScrollToEnd ();

            m_debuggerConnectionWindow.progressBar1.IsIndeterminate = !isError;

            m_debuggerConnectionWindow.Activate ();
          }));
        }

        return VSConstants.S_OK;
      }
      catch (Exception e)
      {
        LoggingUtils.HandleException (e);

        return VSConstants.E_FAIL;
      }
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    int IDebuggerConnectionService.LaunchDialogClose ()
    {
      LoggingUtils.PrintFunction ();

      try
      {
        m_debuggerConnectionWindow.Dispatcher.Invoke ((Action) (() =>
        {
          m_debuggerConnectionWindow.Close ();
        }));

        return VSConstants.S_OK;
      }
      catch (Exception e)
      {
        LoggingUtils.HandleException (e);

        return VSConstants.E_FAIL;
      }
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    private void LaunchWindowClosed (object sender, EventArgs e)
    {
      m_textBuffer.Clear ();

      lock (m_debuggerConnectionWindow)
      {
        m_debuggerConnectionWindow = null;
      }
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  }

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

