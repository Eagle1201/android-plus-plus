<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  Based on Microsoft.Cpp.Win32.targets

  *This file is automatically generated. Local changes risk being overwriten by the export process.*

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->

<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Import Project="$(VCTargetsPath)\Platforms\{master}\ImportBefore\*.targets" Condition="Exists('$(VCTargetsPath)\Platforms\{master}\ImportBefore')" />

  <Import Project="$(VCTargetsPath)\Microsoft.CppCommon.targets" />

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <UsingTask TaskName="GccCompile" AssemblyFile="$(VCTargetsPath)\Platforms\{master}\{master}.MsBuild.dll" />

  <UsingTask TaskName="GccLink" AssemblyFile="$(VCTargetsPath)\Platforms\{master}\{master}.MsBuild.dll" />

  <UsingTask TaskName="GccLib" AssemblyFile="$(VCTargetsPath)\Platforms\{master}\{master}.MsBuild.dll" />

  <UsingTask TaskName="JavaCompile" AssemblyFile="$(VCTargetsPath)\Platforms\{master}\{master}.MsBuild.dll" />

  <UsingTask TaskName="JavaArchive" AssemblyFile="$(VCTargetsPath)\Platforms\{master}\{master}.MsBuild.dll" />

  <UsingTask TaskName="JavaSigner" AssemblyFile="$(VCTargetsPath)\Platforms\{master}\{master}.MsBuild.dll" />

  <UsingTask TaskName="AndroidAidl" AssemblyFile="$(VCTargetsPath)\Platforms\{master}\{master}.MsBuild.dll" />

  <UsingTask TaskName="AndroidManifestMerge" AssemblyFile="$(VCTargetsPath)\Platforms\{master}\{master}.MsBuild.dll" />

  <UsingTask TaskName="AndroidAapt" AssemblyFile="$(VCTargetsPath)\Platforms\{master}\{master}.MsBuild.dll" />

  <UsingTask TaskName="AndroidDex" AssemblyFile="$(VCTargetsPath)\Platforms\{master}\{master}.MsBuild.dll" />

  <UsingTask TaskName="AndroidApk" AssemblyFile="$(VCTargetsPath)\Platforms\{master}\{master}.MsBuild.dll" />

  <UsingTask TaskName="AndroidZipAlign" AssemblyFile="$(VCTargetsPath)\Platforms\{master}\{master}.MsBuild.dll" />

  <UsingTask TaskName="VCMessage" AssemblyName="Microsoft.Build.CppTasks.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <PropertyGroup>

    <!--
      Enable incremental build by enable file tracking in tasks.
    -->

    <TrackFileAccess Condition="'$(TrackFileAccess)' == ''">true</TrackFileAccess>

    <!-- 
      Register a additional post-compile, post-link and deployment targets.
    -->

    <AfterBuildCompileTargets Condition="'$(ConfigurationType)'!='Utility'">$(AfterBuildCompileTargets)</AfterBuildCompileTargets>

    <BuildLinkTargets Condition="'$(ConfigurationType)'!='Utility'">$(BuildLinkTargets);AndroidManifest;AndroidAidl;AndroidJava;</BuildLinkTargets>

    <BuildLinkTargets Condition="'$(ConfigurationType)'=='Application'">$(BuildLinkTargets);AndroidDalvik;AndroidApk;AndroidApkSigner;AndroidApkDeploy</BuildLinkTargets>

    <BuildCompileAction>$(CommonBuildOnlyTargets);$(BeforeBuildCompileTargets);$(BuildCompileTargets);$(AfterBuildCompileTargets)</BuildCompileAction>

    <BuildLinkAction>$(CommonBuildOnlyTargets);$(BeforeBuildLinkTargets);$(BuildLinkTargets);$(AfterBuildLinkTargets)</BuildLinkAction>

  </PropertyGroup>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <!-- 
    'ClCompile' based on: MSBuild\Microsoft.Cpp\v4.0\Microsoft.CppCommon.targets 
  -->
  
  <Target Name="ClCompile" Condition="'@(ClCompile)' != ''" DependsOnTargets="SelectClCompile">

    <ItemGroup>
      <ClCompile>
        <CompileAs Condition="('%(ClCompile.CompileAs)' == 'Default' and '%(ClCompile.Extension)' == '.c')">CompileAsC</CompileAs>
        <CompileAs Condition="('%(ClCompile.CompileAs)' == 'Default' and '%(ClCompile.Extension)' == '.s')">CompileAsAsm</CompileAs>
        <CompileAs Condition="('%(ClCompile.CompileAs)' == 'Default' and '%(ClCompile.Extension)' == '.asm')">CompileAsAsm</CompileAs>
        <CompileAs Condition="('%(ClCompile.CompileAs)' == 'Default' and ('%(ClCompile.Extension)' != '.c' and '%(ClCompile.Extension)' != '.s' and '%(ClCompile.Extension)' != '.asm'))">CompileAsCpp</CompileAs>
      </ClCompile>
    </ItemGroup>

    <GccCompile
      Condition                          ="'%(ClCompile.ExcludedFromBuild)'!='true'"
      BuildingInIDE                      ="$(BuildingInsideVisualStudio)"
      Sources                            ="@(ClCompile)"

      ProcessorNumber                    ="%(ClCompile.ProcessorNumber)"
      MultiProcessorCompilation          ="%(ClCompile.MultiProcessorCompilation)"

      TrackerLogDirectory                ="%(ClCompile.TrackerLogDirectory)"
      TLogReadFiles                      ="@(CLTLogReadFiles)"
      TLogWriteFiles                     ="@(CLTLogWriteFiles)"
      TrackFileAccess                    ="$(TrackFileAccess)"
      MinimalRebuildFromTracking         ="%(ClCompile.MinimalRebuildFromTracking)"

      OutputCommandLine                  ="%(ClCompile.OutputCommandLine)"
      ToolPath                           ="$(PlatformToolsetCompileToolPath)"
      ToolExe                            ="$(PlatformToolsetCompileTool)"
      PropertiesFile                     ="$(VCTargetsPath)\Platforms\{master}\Props\gcc_compile.xml">

    </GccCompile>

  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <!-- 
    'Link' based on: MSBuild\Microsoft.Cpp\v4.0\Microsoft.CppCommon.targets 
  -->

  <Target 
    Name="Link" 
    Condition="'@(Link)' != ''">

    <PropertyGroup>
      <Link_MinimalRebuildFromTracking Condition="'@(Link->AnyHaveMetadataValue('MinimalRebuildFromTracking', 'false'))' == 'true'">false</Link_MinimalRebuildFromTracking>
      <Link_MinimalRebuildFromTracking Condition="'$(BuildType)' != 'Build' or '$(ForceRebuild)' == 'true'" >false</Link_MinimalRebuildFromTracking>
      <Link_MinimalRebuildFromTracking Condition="'$(Link_MinimalRebuildFromTracking)' == ''">true</Link_MinimalRebuildFromTracking>
    </PropertyGroup>

    <GccLink
      BuildingInIDE                  ="$(BuildingInsideVisualStudio)"
      Sources                        ="@(Link)"

      TrackerLogDirectory            ="%(Link.TrackerLogDirectory)"
      TLogReadFiles                  ="@(LinkTLogReadFiles)"
      TLogWriteFiles                 ="@(LinkTLogWriteFiles)"
      TrackFileAccess                ="$(TrackFileAccess)"
      MinimalRebuildFromTracking     ="$(Link_MinimalRebuildFromTracking)"

      OutputCommandLine              ="%(Link.OutputCommandLine)"
      ToolPath                       ="$(PlatformToolsetLinkToolPath)"
      ToolExe                        ="$(PlatformToolsetLinkTool)"
      PropertiesFile                 ="$(VCTargetsPath)\Platforms\{master}\Props\gcc_link.xml">

      <Output TaskParameter="OutputFiles" ItemName="LinkOutputFiles" />

      <Output TaskParameter="SkippedExecution" PropertyName="LinkSkippedExecution" />

    </GccLink>

    <Message Condition="'$(LinkSkippedExecution)' == 'false'" Text="$(MSBuildProjectFile) -&gt; @(LinkOutputFiles)" Importance="High" />

  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <!-- 
    'Lib' based on: MSBuild\Microsoft.Cpp\v4.0\Microsoft.CppCommon.targets 
  -->

  <Target 
    Name="Lib" 
    Condition="'@(Lib)' != ''">

    <ItemGroup>
      <Lib>
        <MinimalRebuildFromTracking Condition="'%(Lib.MinimalRebuildFromTracking)' == '' and '$(BuildType)' == 'Build' and '$(ForceRebuild)' != 'true'">true</MinimalRebuildFromTracking>
      </Lib>
    </ItemGroup>

    <GccLib
      BuildingInIDE                  ="$(BuildingInsideVisualStudio)"
      Sources                        ="@(Lib)"

      TrackerLogDirectory            ="%(Lib.TrackerLogDirectory)"
      TLogReadFiles                  ="@(LIBTLogReadFiles)"
      TLogWriteFiles                 ="@(LIBTLogWriteFiles)"
      TrackFileAccess                ="$(TrackFileAccess)"
      MinimalRebuildFromTracking     ="%(Lib.MinimalRebuildFromTracking)"

      OutputCommandLine              ="%(Lib.OutputCommandLine)"
      ToolPath                       ="$(PlatformToolsetLibToolPath)"
      ToolExe                        ="$(PlatformToolsetLibTool)"
      PropertiesFile                 ="$(VCTargetsPath)\Platforms\{master}\Props\gcc_lib.xml">

      <Output TaskParameter="OutputFiles" ItemName="LibOutputFiles" />

      <Output TaskParameter="SkippedExecution" PropertyName="LibSkippedExecution" />

    </GccLib>

    <Message Condition="'$(LibSkippedExecution)' == 'false'" Text="$(MSBuildProjectFile) -&gt; @(LibOutputFiles)" Importance="High" />

  </Target> 
  

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <Target
    Name="AndroidManifest"
    Condition="'@(AndroidManifest)' != ''"
    DependsOnTargets="ClCompile">

    <MakeDir Directories="%(AndroidManifest.OutputDirectory)" Condition="!exists('%(AndroidManifest.OutputDirectory)')" />

    <!-- 
      Use a custom task to merge Application and Library variants. Solves a number of problems with resources and dependencies.
    -->

    <AndroidManifestMerge
      Condition                      ="'@(AndroidManifest)' != ''"
      Manifests                      ="@(AndroidManifest)">

      <Output TaskParameter="MergedManifest" ItemName="AndroidManifestMergedManifest" />

    </AndroidManifestMerge>

    <!-- 
      Preprocess required project resources, multiple manifest generate several R.java - but shouldn't conflict with resource ids.
    -->

    <AndroidAapt
      Condition                      ="'@(AndroidManifestMergedManifest)' != ''"
      BuildingInIDE                  ="$(BuildingInsideVisualStudio)"
      Sources                        ="@(AndroidManifestMergedManifest)"

      TrackerLogDirectory            ="%(AndroidManifest.TrackerLogDirectory)"
      TrackFileAccess                ="$(TrackFileAccess)"
      MinimalRebuildFromTracking     ="%(AndroidManifest.MinimalRebuildFromTracking)"

      OutputCommandLine              ="%(AndroidManifest.OutputCommandLine)"
      ToolPath                       ="$(AndroidSdkRoot)\platform-tools"
      ToolExe                        ="aapt.exe"
      ToolArgs                       ="package"
      PropertiesFile                 ="$(VCTargetsPath)\Platforms\{master}\Props\android_manifest.xml">

      <Output TaskParameter="OutputApk" ItemName="AndroidManifestOutputApk" />

      <Output TaskParameter="OutputFiles" ItemName="AndroidManifestOutputFiles" />

      <Output TaskParameter="SkippedExecution" PropertyName="AndroidManifestSkippedExecution" />

    </AndroidAapt>

    <!--
      Compile R.java file(s). This is isolated to ensure that resources can be suitably processed per-library, and per-application (see AndroidApk).
    -->

    <ItemGroup>
      <AndroidManifestOutputJavaFiles Include="@(AndroidManifestOutputFiles)">
        <ClassOutputDirectory>%(AndroidManifest.ResourceConstantsOutputDirectory)</ClassOutputDirectory>
        <SourceCodeVersion>1.5</SourceCodeVersion>
        <TargetCodeVersion>1.5</TargetCodeVersion>
        <CharacterEncoding>UTF-8</CharacterEncoding>
      </AndroidManifestOutputJavaFiles>
    </ItemGroup>

    <JavaCompile
      Condition                      ="'@(AndroidManifestOutputJavaFiles)' != ''"
      BuildingInIDE                  ="$(BuildingInsideVisualStudio)"
      Sources                        ="@(AndroidManifestOutputJavaFiles)"

      TrackerLogDirectory            ="%(AndroidManifest.TrackerLogDirectory)"
      TrackFileAccess                ="$(TrackFileAccess)"
      MinimalRebuildFromTracking     ="%(AndroidManifest.MinimalRebuildFromTracking)"

      OutputCommandLine              ="%(AndroidManifest.OutputCommandLine)"
      ToolPath                       ="$(JavaHomeDir)\bin"
      ToolExe                        ="javac.exe"
      PropertiesFile                 ="$(VCTargetsPath)\Platforms\{master}\Props\android_java.xml">

      <Output TaskParameter="OutputFiles" ItemName="AndroidManifestOutputClassFiles" />

      <Output TaskParameter="OutputClassPaths" ItemName="AndroidManifestOutputClassPaths" />

      <Output TaskParameter="SkippedExecution" PropertyName="AndroidManifestSkippedExecution" />

    </JavaCompile>

  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <Target
    Name="AndroidAidl"
    Condition="'@(AndroidAidl)' != ''"
    DependsOnTargets="ClCompile">

    <!--
      Pre-processes provided .aidl source files, exporting them as .java source-files. Outputs absolute locations of generated sources.
    -->

    <AndroidAidl
      BuildingInIDE                  ="$(BuildingInsideVisualStudio)"
      Sources                        ="@(AndroidAidl)"

      TrackerLogDirectory            ="%(AndroidAidl.TrackerLogDirectory)"
      TrackFileAccess                ="$(TrackFileAccess)"
      MinimalRebuildFromTracking     ="%(AndroidAidl.MinimalRebuildFromTracking)"

      OutputCommandLine              ="%(AndroidAidl.OutputCommandLine)"
      ToolPath                       ="$(AndroidSdkRoot)\platform-tools"
      ToolExe                        ="aidl.exe"
      PropertiesFile                 ="$(VCTargetsPath)\Platforms\{master}\Props\android_aidl.xml">

      <Output TaskParameter="OutputFiles" ItemName="AndroidAidlOutputFiles" />

      <Output TaskParameter="SkippedExecution" PropertyName="AndroidAidlSkippedExecution" />

    </AndroidAidl>

  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <Target 
    Name="AndroidJava" 
    Condition="'@(AndroidJava)' != '' or '@(AndroidAidlOutputFiles)' != ''" 
    DependsOnTargets="AndroidManifest;AndroidAidl">

    <!--
      Import the default output directory for Android resources. Used to seed JavaCompile's class path, so code can reference project resource ids.
    -->

    <ItemGroup>
      <AndroidJava>
        <ClassPaths Condition="'@(AndroidManifestOutputClassPaths)' != ''">@(AndroidManifestOutputClassPaths);%(ClassPaths)</ClassPaths>
        <MinimalRebuildFromTracking Condition="'%(AndroidJava.MinimalRebuildFromTracking)' == '' and '$(BuildType)' == 'Build' and '$(ForceRebuild)' != 'true'">true</MinimalRebuildFromTracking>
      </AndroidJava>
    </ItemGroup>

    <MakeDir Directories="%(AndroidJava.ClassOutputDirectory)" Condition="!exists('%(AndroidJava.ClassOutputDirectory)')" />

    <MakeDir Directories="%(AndroidJava.SourceOutputDirectory)" Condition="!exists('%(AndroidJava.SourceOutputDirectory)')" />

    <!--
      Compile all explicit and generated .java sources. Outputs a list of absolute locations to generated .class files.
    -->

    <JavaCompile
      BuildingInIDE                  ="$(BuildingInsideVisualStudio)"
      Sources                        ="@(AndroidJava);@(AndroidAidlOutputFiles)"

      TrackerLogDirectory            ="%(AndroidJava.TrackerLogDirectory)"
      TrackFileAccess                ="$(TrackFileAccess)"
      MinimalRebuildFromTracking     ="%(AndroidJava.MinimalRebuildFromTracking)"

      OutputCommandLine              ="%(AndroidJava.OutputCommandLine)"
      ToolPath                       ="$(JavaHomeDir)\bin"
      ToolExe                        ="javac.exe"
      PropertiesFile                 ="$(VCTargetsPath)\Platforms\{master}\Props\android_java.xml">

      <Output TaskParameter="OutputFiles" ItemName="AndroidJavaOutputClassFiles" />

      <Output TaskParameter="OutputClassPaths" ItemName="AndroidJavaOutputClassPaths" />

      <Output TaskParameter="SkippedExecution" PropertyName="AndroidJavaSkippedExecution" />

    </JavaCompile>

    <!--
      Archive all generated .class files. Doing so simplifies builds because their outputs are self-contained, makes project configs slightly more hardwork though.
    -->

    <JavaArchive
      BuildingInIDE                  ="$(BuildingInsideVisualStudio)"
      Condition                      ="'$(ConfigurationType)' != 'Application' and '%(AndroidJava.OutputFile)' != '' and '@(AndroidJavaOutputClassFiles)' != ''"
      Sources                        ="@(AndroidJavaOutputClassFiles)"

      OutputFile                     ="%(AndroidJava.OutputFile)"
      ManifestFile                   ="%(AndroidJava.ManifestFile)"

      TrackerLogDirectory            ="%(AndroidJava.TrackerLogDirectory)"
      TrackFileAccess                ="$(TrackFileAccess)"
      MinimalRebuildFromTracking     ="%(AndroidJava.MinimalRebuildFromTracking)"

      OutputCommandLine              ="%(AndroidJava.OutputCommandLine)"
      ToolPath                       ="$(JavaHomeDir)\bin"
      ToolExe                        ="jar.exe"
      PropertiesFile                 ="$(VCTargetsPath)\Platforms\{master}\Props\android_java.xml">

      <Output TaskParameter="OutputFiles" ItemName="AndroidJavaOutputJarFiles" />

      <Output TaskParameter="SkippedExecution" PropertyName="AndroidJavaSkippedExecution" />

    </JavaArchive>

    <Message Condition="'$(AndroidJavaSkippedExecution)' == 'false'" Text="$(MSBuildProjectFile) -&gt; @(AndroidJavaOutputJarFiles)" Importance="High" />

  </Target>
  
  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <Target
    Name="AndroidDalvik"
    Condition="'$(ConfigurationType)' == 'Application'"
    DependsOnTargets="AndroidManifest;AndroidAidl;AndroidJava">

    <ItemGroup>
      <AndroidDalvik Include="@(AndroidJavaOutputClassPaths);@(AndroidManifestOutputClassPaths);@(AndroidJavaOutputJarFiles)">
      </AndroidDalvik>
    </ItemGroup>

    <MakeDir Directories="%(AndroidDalvik.OutputDirectory)" Condition="!exists('%(AndroidDalvik.OutputDirectory)')" />

    <AndroidDex
      BuildingInIDE                  ="$(BuildingInsideVisualStudio)"
      Condition                      ="'@(AndroidDalvik)' != ''"
      Sources                        ="@(AndroidDalvik)"
      OutputFile                     ="%(AndroidDalvik.OutputFile)"

      TrackerLogDirectory            ="%(AndroidDalvik.TrackerLogDirectory)"
      TrackFileAccess                ="$(TrackFileAccess)"
      MinimalRebuildFromTracking     ="%(AndroidDalvik.MinimalRebuildFromTracking)"

      OutputCommandLine              ="%(AndroidDalvik.OutputCommandLine)"
      ToolPath                       ="$(AndroidSdkRoot)\platform-tools"
      ToolExe                        ="dx.bat"
      PropertiesFile                 ="$(VCTargetsPath)\Platforms\{master}\Props\android_dex.xml">

      <Output TaskParameter="OutputFiles" ItemName="AndroidDalvikOutputFiles" />

      <Output TaskParameter="SkippedExecution" PropertyName="AndroidDalvikSkippedExecution" />

    </AndroidDex>

  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <Target
    Name="AndroidApk"
    Condition="'$(ConfigurationType)' == 'Application'"
    DependsOnTargets="AndroidManifest;AndroidAidl;AndroidJava;AndroidDalvik">

    <!-- 
      Use a custom task to merge Application and Library variants. Solves a number of problems with resources and dependencies.
    -->

    <AndroidManifestMerge
      Condition                      ="'@(AndroidManifest)' != ''"
      Manifests                      ="@(AndroidManifest)">

      <Output TaskParameter="MergedManifest" ItemName="AndroidApkMergedManifest" />

    </AndroidManifestMerge>

    <ItemGroup>
      <AndroidApk Include="@(AndroidApkMergedManifest)">
        <IncludeRawDirectories>%(AndroidApk.OutputDirectory)\raw</IncludeRawDirectories>
        <ApkOutputFile>%(AndroidApk.ApkOutputFile)</ApkOutputFile>
      </AndroidApk>
    </ItemGroup>

    <!--
      Copy native libraries and other required files to a intemediate raw directory which can be included directly within final APK.
    -->

    <MakeDir Directories="%(AndroidApk.OutputDirectory)" Condition="!exists('%(AndroidApk.OutputDirectory)')" />

    <Copy Condition="'@(AndroidDalvikOutputFiles)' != ''" SourceFiles="@(AndroidDalvikOutputFiles)" DestinationFolder="%(AndroidApk.OutputDirectory)\raw" />

    <Copy Condition="'$(Configuration)' == 'Debug'" SourceFiles="$(AndroidNdkRoot)\sources\prebuilt\android-$(TargetPlatformArchitecture)\gdbserver\gdbserver"  DestinationFolder="%(AndroidApk.OutputDirectory)\raw\lib\$(TargetPlatformArchitectureEabi)" />

    <Copy SourceFiles="@(LinkOutputFiles)" DestinationFolder="%(AndroidApk.OutputDirectory)\raw\lib\$(TargetPlatformArchitectureEabi)" />

    <!-- 
      Preprocess required project resources, multiple manifest generate several R.java - but shouldn't conflict with resource ids.
    -->

    <AndroidAapt
      Condition                      ="'@(AndroidApk)' != ''"
      BuildingInIDE                  ="$(BuildingInsideVisualStudio)"
      Sources                        ="@(AndroidApk)"

      TrackerLogDirectory            ="%(AndroidApk.TrackerLogDirectory)"
      TrackFileAccess                ="$(TrackFileAccess)"
      MinimalRebuildFromTracking     ="%(AndroidApk.MinimalRebuildFromTracking)"

      OutputCommandLine              ="%(AndroidApk.OutputCommandLine)"
      ToolPath                       ="$(AndroidSdkRoot)\platform-tools"
      ToolExe                        ="aapt.exe"
      ToolArgs                       ="package"
      PropertiesFile                 ="$(VCTargetsPath)\Platforms\{master}\Props\android_manifest.xml">

      <Output TaskParameter="OutputApk" ItemName="AndroidApkOutputApk" />

      <Output TaskParameter="OutputFiles" ItemName="AndroidApkOutputFiles" />

      <Output TaskParameter="SkippedExecution" PropertyName="AndroidApkSkippedExecution" />

    </AndroidAapt>

    <Message Condition="'$(AndroidApkSkippedExecution)' == 'false'" Text="$(MSBuildProjectFile) -&gt; @(AndroidApkOutputApk)" Importance="High" />

  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <Target
    Name="AndroidApkSigner"
    Condition="'@(AndroidApkOutputApk)' != ''"
    DependsOnTargets="AndroidApk">

    <!--
      Sign the APK with specified credentials.
    -->

    <ItemGroup>
      <AndroidApkSigner Include="@(AndroidApkOutputApk)">
        <CommandLineUnsignedJar>@(AndroidApkOutputApk)</CommandLineUnsignedJar>
      </AndroidApkSigner>
    </ItemGroup>

    <JavaSigner
      BuildingInIDE                  ="$(BuildingInsideVisualStudio)"
      Sources                        ="@(AndroidApkSigner)"
      
      TrackerLogDirectory            ="%(AndroidApkSigner.TrackerLogDirectory)"
      TrackFileAccess                ="$(TrackFileAccess)"
      
      ToolPath                       ="$(JavaHomeDir)\bin"
      ToolExe                        ="jarsigner.exe"
      OutputCommandLine              ="%(AndroidApkSigner.OutputCommandLine)"
      PropertiesFile                 ="$(VCTargetsPath)\Platforms\{master}\Props\android_apk_signer.xml">

      <Output TaskParameter="OutputFiles" ItemName="AndroidApkSignerOutputFiles" />

    </JavaSigner>
    
    <!--
      Align the APK. Must be post-signing.
    -->

    <AndroidZipAlign
      BuildingInIDE                  ="$(BuildingInsideVisualStudio)"
      Sources                        ="@(AndroidApkSigner)"
      
      TrackerLogDirectory            ="%(AndroidApkSigner.TrackerLogDirectory)"
      TrackFileAccess                ="$(TrackFileAccess)"
      
      ToolPath                       ="$(AndroidSdkRoot)\tools"
      ToolExe                        ="zipalign.exe"
      OutputCommandLine              ="%(AndroidApkSigner.OutputCommandLine)"
      PropertiesFile                 ="$(VCTargetsPath)\Platforms\{master}\Props\android_apk_signer.xml">

      <Output TaskParameter="OutputFiles" ItemName="AndroidApkSignerOutputFiles" />

    </AndroidZipAlign>

  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <Target
    Name="AndroidApkDeploy"
    DependsOnTargets="AndroidManifest;AndroidAidl;AndroidJava;AndroidApk">

  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <Import Project="$(VCTargetsPath)\Platforms\{master}\{master}.CppBuild.targets" />

  <Import Project="$(VCTargetsPath)\Platforms\{master}\ImportAfter\*.targets" Condition="Exists('$(VCTargetsPath)\Platforms\{master}\ImportAfter')" />

</Project>

<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
