////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

using System;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace AndroidPlusPlus.Common
{

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  public class MiVariable
  {

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    public MiVariable (string expression, MiResultRecord createRecord)
    {
      Expression = expression;

      Name = string.Empty;

      Type = string.Empty;

      ThreadId = 0;

      Dynamic = false;

      HasChildren = false;

      Value = string.Empty;

      Refresh (createRecord);
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    public string Expression { get; protected set; }

    public string Name { get; protected set; }

    public string Type { get; protected set; }

    public uint ThreadId { get; protected set; }

    public bool Dynamic { get; protected set; }

    public bool HasChildren { get; protected set; }

    public string Value { get; protected set; }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    public void Refresh (MiResultRecord resultRecord)
    {
      if ((resultRecord == null) || (resultRecord.IsError ()))
      {
        throw new ArgumentException ();
      }

      if (resultRecord.HasField ("name"))
      {
        Name = resultRecord ["name"].GetString ();
      }

      if (resultRecord.HasField ("type"))
      {
        Type = resultRecord ["type"].GetString ();
      }

      if (resultRecord.HasField ("new_type"))
      {
        Type = resultRecord ["new_type"].GetString ();
      }

      if (resultRecord.HasField ("thread-id"))
      {
        ThreadId =  resultRecord ["thread-id"].GetUnsignedInt ();
      }

      if (resultRecord.HasField ("dynamic"))
      {
        Dynamic = (resultRecord ["dynamic"].GetUnsignedInt () == 1);
      }

      if (Dynamic && (resultRecord.HasField ("has_more")))
      {
        HasChildren = (resultRecord ["has_more"].GetUnsignedInt () != 0);
      }
      else
      {
        if (resultRecord.HasField ("numchild"))
        {
          HasChildren = (resultRecord ["numchild"].GetUnsignedInt () != 0);
        }

        if (resultRecord.HasField ("new_num_children"))
        {
          HasChildren = (resultRecord ["new_num_children"].GetUnsignedInt () != 0);
        }
      }

      if (resultRecord.HasField ("value"))
      {
        Value = resultRecord ["value"].GetString ();
      }
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    public void Delete ()
    {
      throw new NotImplementedException ();
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    public MiVariable GetChildren ()
    {
      throw new NotImplementedException ();
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  }

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
