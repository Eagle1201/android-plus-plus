<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <ItemGroup>
    <PropertyPageSchema Include="$(MSBuildThisFileDirectory)$(MSBuildThisFileName).xml" />
  </ItemGroup>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <UsingTask TaskName="AndroidNdkDepends" AssemblyFile="$(ANDROID_PLUS_PLUS)\msbuild\bin\AndroidPlusPlus.MsBuild.DeployTasks.dll" />

  <UsingTask TaskName="VCMessage" AssemblyName="Microsoft.Build.CppTasks.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <PropertyGroup>

    <ComputeAndroidApkInputsTargets>$(ComputeAndroidApkInputsTargets);ComputeAndroidDalvikOutput;</ComputeAndroidApkInputsTargets>

    <CleanDependsOn>$(CleanDependsOn);CleanAndroidApk;</CleanDependsOn>

  </PropertyGroup>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <Target
    Name="_AndroidApk"
    Condition="'$(ConfigurationType)' == 'Application'"
    DependsOnTargets="$(ComputeAndroidApkInputsTargets)">
  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <Target
    Name="AndroidApk"
    Condition="'$(ConfigurationType)' == 'Application'"
    BeforeTargets="$(AndroidApkBeforeTargets)"
    AfterTargets="$(AndroidApkAfterTargets)"
    DependsOnTargets="AndroidManifest;_AndroidApk;">

    <CallTarget Targets="GetProjectNativeSharedLibraries">
      <Output TaskParameter="TargetOutputs" ItemName="_TargetElfFilesProject" />
    </CallTarget>

    <CallTarget Targets="GetDependencyNativeSharedLibraries">
      <Output TaskParameter="TargetOutputs" ItemName="_TargetElfFilesDependencies" />
    </CallTarget>

    <!--
      Register shared libraries (.so) which will need to be copied to the final APK .\lib\[arch] directory.
    -->

    <ItemGroup>
      <_TargetElfFiles 
        Include="
          @(_TargetElfFilesProject);
          @(_TargetElfFilesDependencies)">
      </_TargetElfFiles>
      <_TargetElfSearchPaths 
        Include="
          @(__TargetElfFiles->'%(RootDir)%(Directory)');
          %(Link.AdditionalLibraryDirectories);
          $(IntDir)apk\lib\$(TargetPlatformArchitectureEabi)">
      </_TargetElfSearchPaths>
    </ItemGroup>

    <!--
      Search for application library (ELF) dependencies. Use 'ndk-depends' to help evaluate this.
    -->

    <AndroidNdkDepends 
      Condition="'@(_TargetElfFiles)' != ''" 
      TargetElfFiles="@(_TargetElfFiles->Metadata('FullPath'))"
      LibrarySearchPaths="@(_TargetElfSearchPaths->Distinct())"
      NdkDependsTool="$(ANDROID_PLUS_PLUS)\toolchain\bin\app-ndk-depends.exe"
      Verbose="true">
      <Output TaskParameter="DependentLibraries" ItemName="AndroidApkDependentLibraries" />
      <Output TaskParameter="DependentSystemLibraries" ItemName="AndroidApkDependentSystemLibraries" />
    </AndroidNdkDepends>

    <!-- 
      Recursively copy registered native libraries/tools to appropriate architecture paths. 
    -->

    <ItemGroup>
      <_CopyNativeLibrariesAndTools 
        Condition="'@(AndroidApkDependentLibraries)' != ''" 
        Include="@(AndroidApkDependentLibraries->Distinct())">
        <IntermediateDirectory>$(IntDir)apk</IntermediateDirectory>
      </_CopyNativeLibrariesAndTools>
      
      <!-- Copy appropriate target architecture 'gdbserver' instance. -->
      <_CopyNativeLibrariesAndTools 
        Condition="('$(UseDebugLibraries)' == 'true' or '%(AndroidManifest.DebugMode)' == 'true')" 
        Include="$(PlatformToolsetGdbServer)">
        <IntermediateDirectory>$(IntDir)apk</IntermediateDirectory>
      </_CopyNativeLibrariesAndTools>
    </ItemGroup>
    
    <Copy 
      Condition="'@(_CopyNativeLibrariesAndTools)' != ''" 
      SourceFiles="@(_CopyNativeLibrariesAndTools)" 
      DestinationFiles="@(_CopyNativeLibrariesAndTools->'%(IntermediateDirectory)\lib\$(TargetPlatformArchitectureEabi)\%(Filename)%(Extension)')" 
    />

    <!-- 
      Duplicate initial AndroidManifest-produced APK (so we can modify it without triggering incremental builds) 
    -->

    <ItemGroup>
      <_UnsignedOutputFile Include="$(IntDir)bin\$(ProjectName)-$(Configuration.Replace(' ','_'))-Unsigned.apk" />
    </ItemGroup>

    <Copy 
      SourceFiles="@(AndroidManifestOutputApk)" 
      DestinationFiles="@(_UnsignedOutputFile->Distinct())">
      <Output TaskParameter="CopiedFiles" ItemName="AndroidApkUnsignedOutputFile" />
    </Copy>

    <!-- 
      Add registered files to the final APK using a 7zip deployment (significantly faster than AAPT). 
        
        Registering example: 
        
        <ItemGroup>
          <AndroidApk Include="$(IntDir)**\libs\**\*" />
        </ItemGroup> 
    -->

    <Copy 
      Condition="'@(AndroidApk)' != ''"
      SourceFiles="@(AndroidApk)" 
      DestinationFiles="@(AndroidApk->'$(IntDir)apk\%(RecursiveDir)%(Filename)%(Extension)')"
    />

    <Exec 
      Condition="'@(AndroidApkUnsignedOutputFile)' != ''"
      Command="7za.exe a -tzip -mx9 -ssc -r &quot;@(AndroidApkUnsignedOutputFile->Metadata('FullPath'))&quot; * &gt;NUL" 
      WorkingDirectory="$(IntDir)apk"
    />

  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <Target
    Name="ComputeAndroidApkOutput"
    DependsOnTargets="AndroidApk">

    <ItemGroup>
      <AndroidApkSign Include="@(AndroidApkUnsignedOutputFile)" />
    </ItemGroup>

  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <Target Name="CleanAndroidApk">

    <ItemGroup>
      <CleanAndroidApkCacheFiles
        Include="
          $(IntDir)*.apk;
          $(IntDir)apk\**\*;"
      />
      <CleanAndroidApkCacheDirectories
        Include="
          $(IntDir)apk\lib\$(TargetPlatformArchitectureEabi);
          $(IntDir)apk\lib;
          $(IntDir)apk"
      />
    </ItemGroup>

    <Delete Files="@(CleanAndroidApkCacheFiles)" />

    <RemoveDir Directories="@(CleanAndroidApkCacheDirectories)" />

  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

</Project>
