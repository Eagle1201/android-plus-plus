<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <ItemGroup>
    <PropertyPageSchema Include="$(MSBuildThisFileDirectory)$(MSBuildThisFileName).xml" />
  </ItemGroup>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <UsingTask TaskName="AndroidNdkDepends" AssemblyFile="$(ANDROID_PLUS_PLUS)\msbuild\bin\{master-verbose}.MsBuild.DeployTasks.dll" />

  <UsingTask TaskName="VCMessage" AssemblyName="Microsoft.Build.CppTasks.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <PropertyGroup>

    <ComputeAndroidApkInputsTargets>$(ComputeAndroidApkInputsTargets);ComputeAndroidDalvikOutput;</ComputeAndroidApkInputsTargets>

    <CleanDependsOn>$(CleanDependsOn);CleanAndroidApk;</CleanDependsOn>

  </PropertyGroup>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <Target
    Name="_AndroidApk"
    Condition="'$(ConfigurationType)' == 'Application'"
    DependsOnTargets="$(ComputeAndroidApkInputsTargets)">
  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <Target
    Name="AndroidApk"
    BeforeTargets="$(AndroidApkBeforeTargets)"
    AfterTargets="$(AndroidApkAfterTargets)"
    DependsOnTargets="AndroidManifest;_AndroidApk;">

    <!--
      Register first-party (linker output) application library for copying to target architecture libs path.
    -->

    <ItemGroup Condition="'@(AndroidApk)' != ''">
      <CopyToNativeTargetArchLibs Include="@(LinkOutputFiles)">
        <IntermediateDirectory>%(AndroidApk.IntermediateDirectory)</IntermediateDirectory>
      </CopyToNativeTargetArchLibs>
    </ItemGroup>

    <!--
      Register third-party libraries provided through a project .\libs\ directory.
    -->

    <ItemGroup Condition="'@(AndroidApk)' != ''">
      <ProjectRelativeNativeLibs Include="$(ProjectDir)libs\$(TargetPlatformArchitectureEabi)\*.so" />
      <CopyToNativeTargetArchLibs Include="@(ProjectRelativeNativeLibs)" >
        <IntermediateDirectory>%(AndroidApk.IntermediateDirectory)</IntermediateDirectory>
      </CopyToNativeTargetArchLibs>
    </ItemGroup>

    <!--
      Search for application library (ELF) dependencies. Use 'ndk-depends' to help evaluate this.
    -->

    <AndroidNdkDepends 
      Condition="'@(LinkOutputFiles)' != ''" 
      NdkDependsTool="$(AndroidNdkRoot)\ndk-depends.exe"
      TargetElfFiles="@(LinkOutputFiles)"
      LibrarySearchPaths="%(Link.AdditionalLibraryDirectories);"
      Verbose="false">
      <Output TaskParameter="DependentLibraries" ItemName="AndroidApkDepedentLibraries" />
    </AndroidNdkDepends>

    <ItemGroup Condition="'@(AndroidApk)' != ''">
      <CopyToNativeTargetArchLibs Include="@(AndroidApkDepedentLibraries->Distinct())">
        <IntermediateDirectory>%(AndroidApk.IntermediateDirectory)</IntermediateDirectory>
      </CopyToNativeTargetArchLibs>
    </ItemGroup>

    <!--
      Copy appropriate target architecture 'gdbserver' instance.
    -->

    <ItemGroup Condition="'$(Configuration)' != 'Release' and '@(AndroidApk)' != ''">
      <CopyToNativeTargetArchLibs Include="$(AndroidNdkRoot)\prebuilt\android-$(TargetPlatformArchitecture)\gdbserver\gdbserver">
        <IntermediateDirectory>%(AndroidApk.IntermediateDirectory)</IntermediateDirectory>
      </CopyToNativeTargetArchLibs>
    </ItemGroup>

    <!-- 
      Recursively copy registered native libraries/tools to appropriate architecture paths. 
    -->

    <Copy 
      Condition="'@(CopyToNativeTargetArchLibs)' != ''" 
      SourceFiles="@(CopyToNativeTargetArchLibs)" 
      DestinationFiles="@(CopyToNativeTargetArchLibs->'%(IntermediateDirectory)\lib\$(TargetPlatformArchitectureEabi)\%(Filename)%(Extension)')" 
    />

    <!-- 
      Recursively copy registered files. Registering example: 
      
        <ItemGroup>
          <AndroidApk Include="$(IntDir)**\libs\**\*" />
        </ItemGroup> 
    -->

    <Copy 
      Condition="'@(AndroidApk)' != ''"
      SourceFiles="@(AndroidApk)" 
      DestinationFiles="@(AndroidApk->'%(IntermediateDirectory)\%(RecursiveDir)%(Filename)%(Extension)')"
    />

    <!-- 
      Duplicate initial AndroidManifest-produced APK (so we can modify it without triggering incremental builds) 
    -->

    <MakeDir 
      Condition="'@(AndroidApk)' != ''" 
      Directories="$([System.IO.Path]::GetDirectoryName(%(AndroidApk.UnsignedOutputFile)))" 
    />

    <Copy
      Condition="'@(AndroidApk)' != ''"
      SourceFiles="@(AndroidManifestOutputApk)"
      DestinationFiles="%(AndroidApk.UnsignedOutputFile)">
    </Copy>

    <!-- 
      Add registered files to the final APK using a 7zip deployment (significantly faster than AAPT). 
    -->

    <ItemGroup>
      <AndroidApkUnsignedOutputFile Include="%(AndroidApk.UnsignedOutputFile)"/>
    </ItemGroup>

    <Exec 
      Condition="'@(AndroidApkUnsignedOutputFile)' != ''"
      Command="7za.exe a -tzip -mx7 -r &quot;@(AndroidApkUnsignedOutputFile->Metadata('FullPath'))&quot; *" 
      WorkingDirectory="%(AndroidApk.IntermediateDirectory)"
    />

  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <Target
    Name="ComputeAndroidApkOutput"
    DependsOnTargets="AndroidApk">

    <ItemGroup>
      <AndroidApkSign Include="@(AndroidApkUnsignedOutputFile)" />
    </ItemGroup>

  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <Target Name="CleanAndroidApk">

    <ItemGroup>
      <CleanAndroidApkCacheFiles
        Include="
        $(IntDir)*.apk;
        $(IntDir)raw\lib\$(TargetPlatformArchitectureEabi)\gdbserver;
        $(IntDir)raw\lib\$(TargetPlatformArchitectureEabi)\*.a;
        $(IntDir)raw\lib\$(TargetPlatformArchitectureEabi)\*.so;
        $(IntDir)raw\**\*;"
      />
      <CleanAndroidApkCacheDirectories
        Include="
        $(IntDir)raw\lib\$(TargetPlatformArchitectureEabi);
        "
      />
    </ItemGroup>

    <Delete Files="@(CleanAndroidApkCacheFiles)" />

    <RemoveDir Directories="@(CleanAndroidApkCacheDirectories)" />

  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

</Project>
