<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <ItemGroup>
    <PropertyPageSchema Include="$(MSBuildThisFileDirectory)$(MSBuildThisFileName).xml" />
  </ItemGroup>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <UsingTask TaskName="AndroidDex" AssemblyFile="$(ANDROID_PLUS_PLUS)\msbuild\bin\AndroidPlusPlus.MsBuild.DeployTasks.dll" />

  <UsingTask TaskName="VCMessage" AssemblyName="Microsoft.Build.CppTasks.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <PropertyGroup>

    <ComputeAndroidDalvikInputsTargets>$(ComputeAndroidDalvikInputsTargets);ComputeAndroidJavaOutput;</ComputeAndroidDalvikInputsTargets>

    <CleanDependsOn>$(CleanDependsOn);CleanAndroidDalvik;</CleanDependsOn>

  </PropertyGroup>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <Target
    Name="_AndroidDalvik"
    DependsOnTargets="$(ComputeAndroidDalvikInputsTargets)">
  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  
  <Target
    Name="AndroidDalvik"
    Condition="'$(ConfigurationType)' == 'Application'"
    BeforeTargets="$(AndroidDalvikBeforeTargets)"
    AfterTargets="$(AndroidDalvikAfterTargets)"
    DependsOnTargets="_AndroidDalvik">

    <!-- 
      Flag sources for incremental build.
    -->

    <ItemGroup>
      <AndroidDalvik Condition="'@(AndroidDalvik)' != ''">
        <MinimalRebuildFromTracking Condition="'%(AndroidDalvik.MinimalRebuildFromTracking)' == '' and '$(BuildType)' == 'Build' and '$(ForceRebuild)' != 'true'">true</MinimalRebuildFromTracking>
      </AndroidDalvik>
    </ItemGroup>

    <!-- 
      Run the entire application's code-base through ProGuard. 
      - Optimising at this late stage (whole program optimisation) is slightly more simplistic than doing it on a per-library basis.
      - For ease of native development, obfuscation has been disabled.
    -->

    <PropertyGroup>
      <_ProGuardRoot>$(AndroidSdkRoot)\tools\proguard</_ProGuardRoot>
      <_ProGuardOutputLog>$(ProjectDir)$(IntDir)bin\proguard-output.txt</_ProGuardOutputLog>
      <_ProGuardOutputJar>$(ProjectDir)$(IntDir)bin\proguard-optimised.jar</_ProGuardOutputJar>
      <_ProGuardOutputSeeds>$(ProjectDir)$(IntDir)bin\proguard-seeds.txt</_ProGuardOutputSeeds>
      <_ProGuardOutputUsage>$(ProjectDir)$(IntDir)bin\proguard-usage.txt</_ProGuardOutputUsage>
      <_ProGuardOutputMapping>$(ProjectDir)$(IntDir)bin\proguard-mapping.txt</_ProGuardOutputMapping>
    </PropertyGroup>

    <ItemGroup>
      <!-- Default configuration script(s). -->
      <_CollatedProGuardProjectScripts
        Include="$(_ProGuardRoot)\proguard-android.txt"
        Condition="'%(AndroidDalvik.Optimize)' != 'true'"
      />
      <_CollatedProGuardProjectScripts
        Include="$(_ProGuardRoot)\proguard-android-optimize.txt"
        Condition="'%(AndroidDalvik.Optimize)' == 'true'"
      />
      <_CollatedProGuardProjectScripts
        Include="$(_ProGuardRoot)\proguard-android-project.txt"
        Condition="Exists('$(_ProGuardRoot)\proguard-android-project.txt')"
      />
      <!-- ProGuard configuration exported from processing the 'merged' AndroidManifest.xml -->
      <_CollatedProGuardProjectScripts 
        Include="%(AndroidManifestMergedManifest.ProguardOptionsOutputFile)" 
        Condition="Exists('%(AndroidManifestMergedManifest.ProguardOptionsOutputFile)')"
      />
      <!-- Look alongside *this* project's AndroidManfiest.xml files for ProGuard scripts. -->
      <_CollatedProGuardProjectScripts 
        Include="@(_ProjectAndroidManifests->'%(RootDir)%(Directory)proguard.txt')"
        Condition="Exists('%(RootDir)%(Directory)proguard.txt')"
      />
      <_CollatedProGuardProjectScripts 
        Include="@(_ProjectAndroidManifests->'%(RootDir)%(Directory)proguard-project.txt')"
        Condition="Exists('%(RootDir)%(Directory)proguard-project.txt')"
      />
      <!-- Look alongside *included* (third-party) projects' AndroidManifest.xml files for ProGuard scripts. -->
      <_CollatedProGuardProjectScripts 
        Include="@(_DependencyAndroidManifests->'%(RootDir)%(Directory)proguard.txt')"
        Condition="Exists('%(RootDir)%(Directory)proguard.txt')"
      />
      <_CollatedProGuardProjectScripts 
        Include="@(_DependencyAndroidManifests->'%(RootDir)%(Directory)proguard-project.txt')"
        Condition="Exists('%(RootDir)%(Directory)proguard-project.txt')"
      />
      <!-- Always include support for ProGuard-specific annotations. -->
      <_CollatedProGuardProjectScripts 
        Include="$(_ProGuardRoot)\examples\annotations\lib\annotations.pro"
        Condition="Exists('$(_ProGuardRoot)\examples\annotations\lib\annotations.pro')"
      />
    </ItemGroup>
    
    <PropertyGroup>
      <!-- Custom command file options and flattened arguments -->
      <_ProGuardCommandFile>$(ProjectDir)$(IntDir)bin\proguard-commands.txt</_ProGuardCommandFile>
      <_ProGuardIncludesArgument>@(_CollatedProGuardProjectScripts->Distinct()->'-include &quot;%(FullPath)&quot;')</_ProGuardIncludesArgument>
      <_ProGuardInJarsArgument>@(AndroidDalvik->Distinct()->'-injars &quot;%(FullPath)&quot;')</_ProGuardInJarsArgument>
      <_ProGuardOutJarsArgument>-outjars &quot;$(_ProGuardOutputJar)&quot;</_ProGuardOutJarsArgument>
      <!-- Characters required to construct command file -->
      <Semicolon>%3B</Semicolon>
    </PropertyGroup>

    <WriteLinesToFile
      Condition="!Exists('$(_ProGuardOutputJar)')"
      File="$(_ProGuardOutputJar)"
      Lines=""
      Overwrite="true"
    />

    <WriteLinesToFile
      Condition="'@(AndroidDalvik)' != ''"
      File="$(_ProGuardCommandFile)"
      Lines=";
# 
# 
$(_ProGuardIncludesArgument) 
$(_ProGuardInJarsArgument) 
$(_ProGuardOutJarsArgument) 
-libraryjars &quot;$(AndroidSdkRoot)\platforms\android-$(AndroidSdkLevel)\android.jar&quot;
# 
# Output a collection of reports to help debugging.
# 
-printseeds &quot;$(_ProGuardOutputSeeds)&quot; 
-printusage &quot;$(_ProGuardOutputUsage)&quot; 
-printmapping &quot;$(_ProGuardOutputMapping)&quot; 
# 
# Explicitly don't obfuscate classes and methods.
# Doing so means that probing for class members\fields will fail on the native side.
# 
-dontobfuscate 
# 
# Specifies not to preverify the processed class files. 
# - See: http://proguard.sourceforge.net/manual/usage.html
# - &quot;Only when eventually targeting Android, it is not necessary, so you can then switch it off to reduce the processing time a bit.&quot;
# 
-dontpreverify
# 
# Skip all warnings, as we've already compiled all the sources via AndroidJava anyway.
# Most of the warnings produced refer to unknown classes, which are present on device but not in libraries.
# TODO: It might be wise to have this toggled. Especially considering this script now supports importing external proguard configs.
# 
-ignorewarnings 
# 
# Retain all classes with native members (http://proguard.sourceforge.net/manual/examples.html#native)
# TODO: This should have 'includedescriptorclasses', but this isn't supported in ProGuard 4.7.
# 
-keepclasseswithmembers class * {
  native &lt;methods&gt;$(Semicolon)
}
-keepclasseswithmembernames class * {
  native &lt;methods&gt;$(Semicolon)
}"
      Overwrite="true"
    />

    <!-- Run ProGuard. -->
    <Exec
      Condition="'@(AndroidDalvik)' != ''"
      Command="&quot;$(JavaHomeDir)\bin\java.exe&quot; -jar &quot;$(AndroidSdkRoot)\tools\proguard\lib\proguard.jar&quot; -include &quot;$(_ProGuardCommandFile)&quot; &gt;$(_ProGuardOutputLog) 2&gt;&amp;1"
    />

    <!-- Trim the contents of the optimised jar. We only want '.class' files retained here. -->
    <!--
    <Exec 
      Condition="'@(AndroidDalvik)' != ''"
      Command="7za.exe d -r &quot;$(_ProGuardOutputJar)&quot; *.java *.d &gt;NUL" 
      WorkingDirectory="$(IntDir)raw"
    />
    -->

    <!--
      The following is a work-around for a hard-limit of Java methods in the Dalvik Executable (DEX) format.
      - Take the whole program optimised output and process this for a list of activities and native classes.
      - Each of the flagged classes will need be prioritised into the first (primary) 'classes.dex' file.
      - Other classes will either be packed into 'classes.dex', or overflow into 'classes#.dex' alternatives.
      - There is a set of support library functionality to help with loading these files at runtime (Android L supports multi-dex natively).
      
      More information: https://developer.android.com/tools/building/multidex.html
    -->

    <PropertyGroup>
      <_DexOutputPath>$(ProjectDir)$(IntDir)bin\dex\</_DexOutputPath>
      <!-- MultiDex script configuration -->
      <_MainDexScriptOutputJar>$(ProjectDir)$(IntDir)bin\mainDexClasses.tmp.jar</_MainDexScriptOutputJar>
      <_MainDexScriptOutputMainList>$(ProjectDir)$(IntDir)bin\mainDexClasses.keep</_MainDexScriptOutputMainList>
      <_MainDexShrunkAndroidJar>$(AndroidSdkRoot)\build-tools\$(AndroidSdkBuildToolsVersion)\multidex\shrinkedAndroid.jar</_MainDexShrunkAndroidJar>
      <_MainDexClassPathArgument>$(_ProGuardOutputJar)</_MainDexClassPathArgument>
      <_MainDexScriptCommandFile>$(ProjectDir)$(IntDir)bin\mainDex-commands.txt</_MainDexScriptCommandFile>
      <_MainDexOutputLog>$(ProjectDir)$(IntDir)bin\mainDex-output.txt</_MainDexOutputLog>
    </PropertyGroup>

    <WriteLinesToFile
      Condition="!Exists('$(_MainDexScriptOutputJar)')"
      File="$(_MainDexScriptOutputJar)"
      Lines=""
      Overwrite="true"
    />

    <WriteLinesToFile
      Condition="'@(AndroidDalvik)' != ''"
      File="$(_MainDexScriptCommandFile)"
      Lines=";
# 
# Configuration options copied from $(AndroidSdkRoot)\build-tools\$(AndroidSdkBuildToolsVersion)\multidex\mainDexClasses.bat
# 
-injars $(_ProGuardOutputJar);
-dontwarn
-forceprocessing
-outjars $(_MainDexScriptOutputJar);
-libraryjars $(_MainDexShrunkAndroidJar);
-dontoptimize
-dontobfuscate
-dontpreverify
-include $(AndroidSdkRoot)\build-tools\$(AndroidSdkBuildToolsVersion)\multidex\mainDexClasses.rules;
# 
# Retain all classes with native members (http://proguard.sourceforge.net/manual/examples.html#native)
# TODO: This should have 'includedescriptorclasses', but this isn't supported in ProGuard 4.7.
# 
-keepclasseswithmembers class * {
  native &lt;methods&gt;$(Semicolon)
}
-keepclasseswithmembernames class * {
  native &lt;methods&gt;$(Semicolon)
}"
      Overwrite="true"
    />

    <!-- Run ProGuard. -->
    <Exec
      Condition="'@(AndroidDalvik)' != ''"
      Command="&quot;$(JavaHomeDir)\bin\java.exe&quot; -jar &quot;$(AndroidSdkRoot)\tools\proguard\lib\proguard.jar&quot; -include &quot;$(_MainDexScriptCommandFile)&quot; &gt;$(_MainDexOutputLog) 2&gt;&amp;1"
    />

    <!-- Run Multi-dex processing. -->
    <Exec 
      Condition="'@(AndroidDalvik)' != ''"
      Command="&quot;$(JavaHomeDir)\bin\java.exe&quot; -Djava.ext.dirs=&quot;$(AndroidSdkRoot)\build-tools\$(AndroidSdkBuildToolsVersion)\lib&quot; com.android.multidex.ClassReferenceListBuilder &quot;$(_MainDexScriptOutputJar)&quot; &quot;$(_MainDexClassPathArgument)&quot; 1&gt;&quot;$(_MainDexScriptOutputMainList)&quot;" 
    />

    <!-- 
      Configure output path, and ensure requested output directories exist.
    -->

    <MakeDir Directories="$([System.IO.Path]::GetDirectoryName($(_DexOutputPath)))" />

    <ItemGroup>
      <_ProjectDalvikInput Include="@(AndroidDalvik)" />
      <AndroidDalvik Include="$(_ProGuardOutputJar)">
        <OutputPath>$(_DexOutputPath)</OutputPath>
        <MultiDexMainList>$(_MainDexScriptOutputMainList)</MultiDexMainList>
        <!-- 'incremental' is not supported with 'multi-dex' (suppress error)-->
        <Incremental Condition="'%(MultiDex)' == 'true'">false</Incremental>
        <!-- 'num-threads' is ignored when used with 'multi-dex' (suppress warning) -->
        <NumberOfThreads Condition="'%(MultiDex)' == 'true'"></NumberOfThreads>
        <!-- Nuke any additional parameters if 'multi-dex' isn't activated. -->
        <MultiDexMainList Condition="'%(MultiDex)' != 'true'"></MultiDexMainList>
        <MultiDexMinimalMainDex Condition="'%(MultiDex)' != 'true'"></MultiDexMinimalMainDex>
      </AndroidDalvik>
      <AndroidDalvik Remove="@(_ProjectDalvikInput)" />
    </ItemGroup>

    <!-- 
      Process input class-paths and generate a Dalvik executable (i.e. classes.dex) 
    -->

    <AndroidDex
      BuildingInIDE="$(BuildingInsideVisualStudio)"
      Condition="'@(AndroidDalvik)' != ''"
      Sources="@(AndroidDalvik)"
      OutputPath="%(AndroidDalvik.OutputPath)"
      TrackerLogDirectory ="%(AndroidDalvik.TrackerLogDirectory)"
      TrackFileAccess="$(TrackFileAccess)"
      MinimalRebuildFromTracking="%(AndroidDalvik.MinimalRebuildFromTracking)"
      OutputCommandLine="%(AndroidDalvik.OutputCommandLine)"
      ToolPath="$(JavaHomeDir)\bin"
      ToolExe="java.exe"
      DexJar="$(AndroidSdkRoot)\build-tools\$(AndroidSdkBuildToolsVersion)\lib\dx.jar"
      PropertiesFile="$(MSBuildThisFileDirectory)$(MSBuildThisFileName).xml">
      <Output TaskParameter="OutputFiles" ItemName="AndroidDalvikOutputFiles" />
      <Output TaskParameter="SkippedExecution" PropertyName="AndroidDalvikSkippedExecution" />
    </AndroidDex>

    <ItemGroup>
      <!-- Ensure DEX output is referenced even when builds are skipped due to minimal rebuilds. -->
      <AndroidDalvikOutputFiles Condition="'$(AndroidDalvikSkippedExecution)' == 'true'" Include="$(_DexOutputFile)" />
    </ItemGroup>

  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <Target
    Name="ComputeAndroidDalvikOutput"
    DependsOnTargets="AndroidDalvik">

    <ItemGroup>
      <AndroidApk Include="@(AndroidDalvikOutputFiles)" />
    </ItemGroup>

  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <Target Name="CleanAndroidDalvik">

    <ItemGroup>
      <CleanAndroidDalvikCache
        Include="
        $(IntDir)bin\**\*.dex;
        $(IntDir)bin\**\*.dex.d;"
      />
    </ItemGroup>

    <Delete Files="@(CleanAndroidDalvikCache)" />

  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

</Project>
