////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Linq;
using System.IO;
using System.Text;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace app_java_builder.JavaClassParser
{

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  public abstract class ConstantInfo
  {
    public byte tag;

    public enum Tags
    {
      CONSTANT_Class = 7,
      CONSTANT_FieldRef = 9,
      CONSTANT_MethodRef = 10,
      CONSTANT_InterfaceMethodRef = 11,
      CONSTANT_String = 8,
      CONSTANT_Integer = 3,
      CONSTANT_Float = 4,
      CONSTANT_Long = 5,
      CONSTANT_Double = 6,
      CONSTANT_NameAndType = 12,
      CONSTANT_Utf8 = 1,
      CONSTANT_MethodHandle = 15,
      CONSTANT_MethodType = 16,
      CONSTANT_InvokeDynamic = 18,
    }

    public ConstantInfo (Tags _tag)
    {
      tag = (byte) _tag;
    }

    public abstract void Parse (ref BinaryReader reader);
  }

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  class ConstantClassInfo : ConstantInfo
  {
    public ushort name_index;

    public ConstantClassInfo ()
      : base (Tags.CONSTANT_Class)
    {
    }

    public override void Parse (ref BinaryReader reader)
    {
      name_index = EndianSwap.SwapUInt16 (reader.ReadUInt16 ());
    }
  }

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  class ConstantFieldRefInfo : ConstantInfo
  {
    public ushort class_index;

    public ushort name_and_type_index;

    public ConstantFieldRefInfo ()
      : base (Tags.CONSTANT_FieldRef)
    {
    }

    public override void Parse (ref BinaryReader reader)
    {
      class_index = EndianSwap.SwapUInt16 (reader.ReadUInt16 ());

      name_and_type_index = EndianSwap.SwapUInt16 (reader.ReadUInt16 ());
    }
  }

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  class ConstantMethodRefInfo : ConstantInfo
  {
    public ushort class_index;

    public ushort name_and_type_index;

    public ConstantMethodRefInfo ()
      : base (Tags.CONSTANT_MethodRef)
    {
    }

    public override void Parse (ref BinaryReader reader)
    {
      class_index = EndianSwap.SwapUInt16 (reader.ReadUInt16 ());

      name_and_type_index = EndianSwap.SwapUInt16 (reader.ReadUInt16 ());
    }
  }

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  class ConstantInterfaceMethodRefInfo : ConstantInfo
  {
    public ushort class_index;

    public ushort name_and_type_index;

    public ConstantInterfaceMethodRefInfo ()
      : base (Tags.CONSTANT_InterfaceMethodRef)
    {
    }

    public override void Parse (ref BinaryReader reader)
    {
      class_index = EndianSwap.SwapUInt16 (reader.ReadUInt16 ());

      name_and_type_index = EndianSwap.SwapUInt16 (reader.ReadUInt16 ());
    }
  }

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  class ConstantStringInfo : ConstantInfo
  {
    public ushort string_index;

    public ConstantStringInfo ()
      : base (Tags.CONSTANT_String)
    {
    }

    public override void Parse (ref BinaryReader reader)
    {
      string_index = EndianSwap.SwapUInt16 (reader.ReadUInt16 ());
    }
  }

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  class ConstantIntegerInfo : ConstantInfo
  {
    public uint bytes;

    public ConstantIntegerInfo ()
      : base (Tags.CONSTANT_Integer)
    {
    }

    public override void Parse (ref BinaryReader reader)
    {
      bytes = EndianSwap.SwapUInt32 (reader.ReadUInt32 ());
    }
  }

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  class ConstantFloatInfo : ConstantInfo
  {
    public float bytes;

    public ConstantFloatInfo ()
      : base (Tags.CONSTANT_Float)
    {
    }

    public override void Parse (ref BinaryReader reader)
    {
      bytes = EndianSwap.SwapSingle (reader.ReadSingle ());
    }
  }

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  class ConstantLongInfo : ConstantInfo
  {
    public uint high_bytes;

    public uint low_bytes;

    public ConstantLongInfo ()
      : base (Tags.CONSTANT_Long)
    {
    }

    public override void Parse (ref BinaryReader reader)
    {
      high_bytes = EndianSwap.SwapUInt32 (reader.ReadUInt32 ());

      low_bytes = EndianSwap.SwapUInt32 (reader.ReadUInt32 ());
    }
  }

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  class ConstantDoubleInfo : ConstantInfo
  {
    public uint high_bytes;

    public uint low_bytes;

    public ConstantDoubleInfo ()
      : base (Tags.CONSTANT_Double)
    {
    }

    public override void Parse (ref BinaryReader reader)
    {
      high_bytes = EndianSwap.SwapUInt32 (reader.ReadUInt32 ());

      low_bytes = EndianSwap.SwapUInt32 (reader.ReadUInt32 ());
    }
  }

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  class ConstantNameAndTypeInfo : ConstantInfo
  {
    public ushort name_index;

    public ushort descriptor_index;

    public ConstantNameAndTypeInfo ()
      : base (Tags.CONSTANT_NameAndType)
    {
    }

    public override void Parse (ref BinaryReader reader)
    {
      name_index = EndianSwap.SwapUInt16 (reader.ReadUInt16 ());

      descriptor_index = EndianSwap.SwapUInt16 (reader.ReadUInt16 ());
    }
  }

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  class ConstantUtf8Info : ConstantInfo
  {
    public ushort length;

    public byte [] bytes;

    public ConstantUtf8Info ()
      : base (Tags.CONSTANT_Utf8)
    {
    }

    public override void Parse (ref BinaryReader reader)
    {
      length = EndianSwap.SwapUInt16 (reader.ReadUInt16 ());

      bytes = reader.ReadBytes ((int) length);
    }
  }

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  class ConstantMethodHandleInfo : ConstantInfo
  {
    public byte reference_kind;

    public ushort reference_index;

    public ConstantMethodHandleInfo ()
      : base (Tags.CONSTANT_MethodHandle)
    {
    }

    public override void Parse (ref BinaryReader reader)
    {
      reference_kind = reader.ReadByte ();

      reference_index = EndianSwap.SwapUInt16 (reader.ReadUInt16 ());
    }
  }

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  class ConstantMethodTypeInfo : ConstantInfo
  {
    public ushort descriptor_index;

    public ConstantMethodTypeInfo ()
      : base (Tags.CONSTANT_MethodType)
    {
    }

    public override void Parse (ref BinaryReader reader)
    {
      descriptor_index = EndianSwap.SwapUInt16 (reader.ReadUInt16 ());
    }
  }

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  class ConstantInvokeDynamicInfo : ConstantInfo
  {
    public ushort bootstrap_method_attr_index;

    public ushort name_and_type_index;

    public ConstantInvokeDynamicInfo ()
      : base (Tags.CONSTANT_InvokeDynamic)
    {
    }

    public override void Parse (ref BinaryReader reader)
    {
      bootstrap_method_attr_index = EndianSwap.SwapUInt16 (reader.ReadUInt16 ());

      name_and_type_index = EndianSwap.SwapUInt16 (reader.ReadUInt16 ());
    }
  }

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
